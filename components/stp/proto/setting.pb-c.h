/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: setting.proto */

#ifndef PROTOBUF_C_setting_2eproto__INCLUDED
#define PROTOBUF_C_setting_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Setting__Time Setting__Time;
typedef struct _Setting__Alarm Setting__Alarm;
typedef struct _Setting__Alarm__Body Setting__Alarm__Body;
typedef struct _Setting__Silence Setting__Silence;
typedef struct _Setting__Silence__Time Setting__Silence__Time;
typedef struct _Setting__RemindMode Setting__RemindMode;


/* --- enums --- */

typedef enum _Setting__Alarm__Body__WeekDay {
  SETTING__ALARM__BODY__WEEK_DAY__MONDAY = 1,
  SETTING__ALARM__BODY__WEEK_DAY__TUESDAY = 2,
  SETTING__ALARM__BODY__WEEK_DAY__WEDNESDAY = 4,
  SETTING__ALARM__BODY__WEEK_DAY__THURSDAY = 8,
  SETTING__ALARM__BODY__WEEK_DAY__FRIDAY = 16,
  SETTING__ALARM__BODY__WEEK_DAY__SATURDAY = 32,
  SETTING__ALARM__BODY__WEEK_DAY__SUNDAY = 64
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SETTING__ALARM__BODY__WEEK_DAY)
} Setting__Alarm__Body__WeekDay;
typedef enum _Setting__Silence__State {
  SETTING__SILENCE__STATE__DISABLE = 0,
  SETTING__SILENCE__STATE__ENABLE = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SETTING__SILENCE__STATE)
} Setting__Silence__State;
typedef enum _Setting__RemindMode__Mode {
  SETTING__REMIND_MODE__MODE__DEFAULT = 0,
  SETTING__REMIND_MODE__MODE__SHAKE = 1,
  SETTING__REMIND_MODE__MODE__DISPLAY = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(SETTING__REMIND_MODE__MODE)
} Setting__RemindMode__Mode;

/* --- messages --- */

struct  _Setting__Time
{
  ProtobufCMessage base;
  /*
   *Unix timestamp
   */
  uint32_t unix_timestamp;
};
#define SETTING__TIME__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&setting__time__descriptor) \
    , 0 }


struct  _Setting__Alarm__Body
{
  ProtobufCMessage base;
  uint32_t hour;
  uint32_t min;
  uint32_t sec;
  uint32_t weekdays;
  protobuf_c_boolean repeat;
};
#define SETTING__ALARM__BODY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&setting__alarm__body__descriptor) \
    , 0, 0, 0, 0, 0 }


struct  _Setting__Alarm
{
  ProtobufCMessage base;
  size_t n_entities;
  Setting__Alarm__Body **entities;
};
#define SETTING__ALARM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&setting__alarm__descriptor) \
    , 0,NULL }


struct  _Setting__Silence__Time
{
  ProtobufCMessage base;
  uint32_t hour_start;
  uint32_t min_start;
  uint32_t hour_end;
  uint32_t min_end;
};
#define SETTING__SILENCE__TIME__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&setting__silence__time__descriptor) \
    , 0, 0, 0, 0 }


struct  _Setting__Silence
{
  ProtobufCMessage base;
  Setting__Silence__State enable;
  size_t n_time;
  Setting__Silence__Time **time;
};
#define SETTING__SILENCE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&setting__silence__descriptor) \
    , SETTING__SILENCE__STATE__DISABLE, 0,NULL }


struct  _Setting__RemindMode
{
  ProtobufCMessage base;
  Setting__RemindMode__Mode mode;
};
#define SETTING__REMIND_MODE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&setting__remind_mode__descriptor) \
    , SETTING__REMIND_MODE__MODE__DEFAULT }


/* Setting__Time methods */
void   setting__time__init
                     (Setting__Time         *message);
size_t setting__time__get_packed_size
                     (const Setting__Time   *message);
size_t setting__time__pack
                     (const Setting__Time   *message,
                      uint8_t             *out);
size_t setting__time__pack_to_buffer
                     (const Setting__Time   *message,
                      ProtobufCBuffer     *buffer);
Setting__Time *
       setting__time__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   setting__time__free_unpacked
                     (Setting__Time *message,
                      ProtobufCAllocator *allocator);
/* Setting__Alarm__Body methods */
void   setting__alarm__body__init
                     (Setting__Alarm__Body         *message);
/* Setting__Alarm methods */
void   setting__alarm__init
                     (Setting__Alarm         *message);
size_t setting__alarm__get_packed_size
                     (const Setting__Alarm   *message);
size_t setting__alarm__pack
                     (const Setting__Alarm   *message,
                      uint8_t             *out);
size_t setting__alarm__pack_to_buffer
                     (const Setting__Alarm   *message,
                      ProtobufCBuffer     *buffer);
Setting__Alarm *
       setting__alarm__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   setting__alarm__free_unpacked
                     (Setting__Alarm *message,
                      ProtobufCAllocator *allocator);
/* Setting__Silence__Time methods */
void   setting__silence__time__init
                     (Setting__Silence__Time         *message);
/* Setting__Silence methods */
void   setting__silence__init
                     (Setting__Silence         *message);
size_t setting__silence__get_packed_size
                     (const Setting__Silence   *message);
size_t setting__silence__pack
                     (const Setting__Silence   *message,
                      uint8_t             *out);
size_t setting__silence__pack_to_buffer
                     (const Setting__Silence   *message,
                      ProtobufCBuffer     *buffer);
Setting__Silence *
       setting__silence__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   setting__silence__free_unpacked
                     (Setting__Silence *message,
                      ProtobufCAllocator *allocator);
/* Setting__RemindMode methods */
void   setting__remind_mode__init
                     (Setting__RemindMode         *message);
size_t setting__remind_mode__get_packed_size
                     (const Setting__RemindMode   *message);
size_t setting__remind_mode__pack
                     (const Setting__RemindMode   *message,
                      uint8_t             *out);
size_t setting__remind_mode__pack_to_buffer
                     (const Setting__RemindMode   *message,
                      ProtobufCBuffer     *buffer);
Setting__RemindMode *
       setting__remind_mode__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   setting__remind_mode__free_unpacked
                     (Setting__RemindMode *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Setting__Time_Closure)
                 (const Setting__Time *message,
                  void *closure_data);
typedef void (*Setting__Alarm__Body_Closure)
                 (const Setting__Alarm__Body *message,
                  void *closure_data);
typedef void (*Setting__Alarm_Closure)
                 (const Setting__Alarm *message,
                  void *closure_data);
typedef void (*Setting__Silence__Time_Closure)
                 (const Setting__Silence__Time *message,
                  void *closure_data);
typedef void (*Setting__Silence_Closure)
                 (const Setting__Silence *message,
                  void *closure_data);
typedef void (*Setting__RemindMode_Closure)
                 (const Setting__RemindMode *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor setting__time__descriptor;
extern const ProtobufCMessageDescriptor setting__alarm__descriptor;
extern const ProtobufCMessageDescriptor setting__alarm__body__descriptor;
extern const ProtobufCEnumDescriptor    setting__alarm__body__week_day__descriptor;
extern const ProtobufCMessageDescriptor setting__silence__descriptor;
extern const ProtobufCMessageDescriptor setting__silence__time__descriptor;
extern const ProtobufCEnumDescriptor    setting__silence__state__descriptor;
extern const ProtobufCMessageDescriptor setting__remind_mode__descriptor;
extern const ProtobufCEnumDescriptor    setting__remind_mode__mode__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_setting_2eproto__INCLUDED */
