/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: call.proto */

#ifndef PROTOBUF_C_call_2eproto__INCLUDED
#define PROTOBUF_C_call_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "time.pb-c.h"

typedef struct _Call__Notice Call__Notice;
typedef struct _Call__CallState Call__CallState;


/* --- enums --- */

typedef enum _Call__CallState__State {
  CALL__CALL_STATE__STATE__ANSWER = 1,
  CALL__CALL_STATE__STATE__REJECT = 2,
  CALL__CALL_STATE__STATE__SPEAKER = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(CALL__CALL_STATE__STATE)
} Call__CallState__State;

/* --- messages --- */

struct  _Call__Notice
{
  ProtobufCMessage base;
  /*
   *Time stamp
   */
  Proto__Time__UnixTimestamp *timestamp;
  /*
   *Phone number
   */
  char *phone;
  /*
   *Contact name
   */
  char *people;
};
#define CALL__NOTICE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&call__notice__descriptor) \
    , NULL, NULL, NULL }


struct  _Call__CallState
{
  ProtobufCMessage base;
  Call__CallState__State state;
};
#define CALL__CALL_STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&call__call_state__descriptor) \
    , CALL__CALL_STATE__STATE__ANSWER }


/* Call__Notice methods */
void   call__notice__init
                     (Call__Notice         *message);
size_t call__notice__get_packed_size
                     (const Call__Notice   *message);
size_t call__notice__pack
                     (const Call__Notice   *message,
                      uint8_t             *out);
size_t call__notice__pack_to_buffer
                     (const Call__Notice   *message,
                      ProtobufCBuffer     *buffer);
Call__Notice *
       call__notice__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   call__notice__free_unpacked
                     (Call__Notice *message,
                      ProtobufCAllocator *allocator);
/* Call__CallState methods */
void   call__call_state__init
                     (Call__CallState         *message);
size_t call__call_state__get_packed_size
                     (const Call__CallState   *message);
size_t call__call_state__pack
                     (const Call__CallState   *message,
                      uint8_t             *out);
size_t call__call_state__pack_to_buffer
                     (const Call__CallState   *message,
                      ProtobufCBuffer     *buffer);
Call__CallState *
       call__call_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   call__call_state__free_unpacked
                     (Call__CallState *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Call__Notice_Closure)
                 (const Call__Notice *message,
                  void *closure_data);
typedef void (*Call__CallState_Closure)
                 (const Call__CallState *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor call__notice__descriptor;
extern const ProtobufCMessageDescriptor call__call_state__descriptor;
extern const ProtobufCEnumDescriptor    call__call_state__state__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_call_2eproto__INCLUDED */
